{"remainingRequest":"D:\\project\\blb-consumer-frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\blb-consumer-frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\blb-consumer-frontend\\src\\service\\PayService.js","dependencies":[{"path":"D:\\project\\blb-consumer-frontend\\src\\service\\PayService.js","mtime":1606571741845},{"path":"D:\\project\\blb-consumer-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\blb-consumer-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\blb-consumer-frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovcHJvamVjdC9ibGItY29uc3VtZXItZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkQ6L3Byb2plY3QvYmxiLWNvbnN1bWVyLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiRDovcHJvamVjdC9ibGItY29uc3VtZXItZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IHJlcG9zaXRvcnkgZnJvbSAnLi4vcmVwb3NpdG9yeSc7CmltcG9ydCBxcmNvZGUgZnJvbSAncXJjb2RlJzsgLy8g5pSv5LuY5pyN5YqhCgp2YXIgUGF5U2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gUGF5U2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQYXlTZXJ2aWNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhQYXlTZXJ2aWNlLCBbewogICAga2V5OiAiZ2VuZXJhdGVQYXkiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZW5lcmF0ZVBheSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShvcmRlcklkKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVwb3NpdG9yeS5nZW5lcmF0ZVBheShvcmRlcklkKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfnlJ/miJDmlK/ku5jlpLHotKU6JyArIGRhdGEubXNnKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZGF0YS5kYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdlbmVyYXRlUGF5KF94KSB7CiAgICAgICAgcmV0dXJuIF9nZW5lcmF0ZVBheS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2VuZXJhdGVQYXk7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJnZXRQYXlJbmZvIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0UGF5SW5mbyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIob3JkZXJJZCkgewogICAgICAgIHZhciBkYXRhLCBkYXRhVXJsOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVwb3NpdG9yeS5nZXRQYXlVcmwob3JkZXJJZCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfojrflj5bmlK/ku5jkv6Hmga/lpLHotKU6JyArIGRhdGEubXNnKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHFyY29kZS50b0RhdGFVUkwoZGF0YS5kYXRhLnVybCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGRhdGFVcmwgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgICAgIHVybDogZGF0YVVybCwKICAgICAgICAgICAgICAgICAgc2hvcE5hbWU6IGRhdGEuZGF0YS5zaG9wTmFtZSwKICAgICAgICAgICAgICAgICAgb3JkZXJJZDogZGF0YS5kYXRhLm9yZGVySWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRQYXlJbmZvKF94MikgewogICAgICAgIHJldHVybiBfZ2V0UGF5SW5mby5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0UGF5SW5mbzsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImdldFBheVN0YXR1cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldFBheVN0YXR1cyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMocGF5SWQpIHsKICAgICAgICB2YXIgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcG9zaXRvcnkuZ2V0UGF5U3RhdHVzKHBheUlkKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+iOt+WPluaUr+S7mOeKtuaAgeWksei0pTonICsgZGF0YS5tc2cpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgZGF0YS5kYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0UGF5U3RhdHVzKF94MykgewogICAgICAgIHJldHVybiBfZ2V0UGF5U3RhdHVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRQYXlTdGF0dXM7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJnZXRQYXlTdGF0dXNTdHIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBheVN0YXR1c1N0cihzdGF0dXMpIHsKICAgICAgaWYgKHN0YXR1cyA9PT0gMCkgewogICAgICAgIHJldHVybiAn5pyq5pSv5LuYJzsKICAgICAgfQoKICAgICAgaWYgKHN0YXR1cyA9PT0gMSkgewogICAgICAgIHJldHVybiAn5bey5pSv5LuYJzsKICAgICAgfQoKICAgICAgaWYgKHN0YXR1cyA9PT0gMikgewogICAgICAgIHJldHVybiAn5bey5Y+W5raIJzsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIFBheVNlcnZpY2U7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBQYXlTZXJ2aWNlKCk7"},{"version":3,"sources":["D:/project/blb-consumer-frontend/src/service/PayService.js"],"names":["repository","qrcode","PayService","orderId","generatePay","data","success","Error","msg","getPayUrl","toDataURL","url","dataUrl","shopName","payId","getPayStatus","status"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;IACMC,U;;;;;;;;kGACeC,O;;;;;;;uBACEH,UAAU,CAACI,WAAX,CAAuBD,OAAvB,C;;;AAAbE,gBAAAA,I;;oBACDA,IAAI,CAACC,O;;;;;sBACF,IAAIC,KAAJ,CAAU,YAAYF,IAAI,CAACG,GAA3B,C;;;iDAEDH,IAAI,CAACA,I;;;;;;;;;;;;;;;;;;;kGAGIF,O;;;;;;;uBACGH,UAAU,CAACS,SAAX,CAAqBN,OAArB,C;;;AAAbE,gBAAAA,I;;oBACDA,IAAI,CAACC,O;;;;;sBACF,IAAIC,KAAJ,CAAU,cAAcF,IAAI,CAACG,GAA7B,C;;;;uBAEcP,MAAM,CAACS,SAAP,CAAiBL,IAAI,CAACA,IAAL,CAAUM,GAA3B,C;;;AAAhBC,gBAAAA,O;kDACC;AACLD,kBAAAA,GAAG,EAAEC,OADA;AAELC,kBAAAA,QAAQ,EAAER,IAAI,CAACA,IAAL,CAAUQ,QAFf;AAGLV,kBAAAA,OAAO,EAAEE,IAAI,CAACA,IAAL,CAAUF;AAHd,iB;;;;;;;;;;;;;;;;;;;oGAOWW,K;;;;;;;uBACCd,UAAU,CAACe,YAAX,CAAwBD,KAAxB,C;;;AAAbT,gBAAAA,I;;oBACDA,IAAI,CAACC,O;;;;;sBACF,IAAIC,KAAJ,CAAU,cAAcF,IAAI,CAACG,GAA7B,C;;;kDAEDH,IAAI,CAACA,I;;;;;;;;;;;;;;;;;;oCAGGW,M,EAAQ;AACvB,UAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,eAAO,KAAP;AACD;;AACD,UAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,eAAO,KAAP;AACD;;AACD,UAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,eAAO,KAAP;AACD;AACF;;;;;;AAEH,eAAe,IAAId,UAAJ,EAAf","sourcesContent":["import repository from '../repository'\r\nimport qrcode from 'qrcode'\r\n// 支付服务\r\nclass PayService {\r\n  async generatePay (orderId) {\r\n    const data = await repository.generatePay(orderId)\r\n    if (!data.success) {\r\n      throw new Error('生成支付失败:' + data.msg)\r\n    }\r\n    return data.data\r\n  }\r\n\r\n  async getPayInfo (orderId) {\r\n    const data = await repository.getPayUrl(orderId)\r\n    if (!data.success) {\r\n      throw new Error('获取支付信息失败:' + data.msg)\r\n    }\r\n    const dataUrl = await qrcode.toDataURL(data.data.url)\r\n    return {\r\n      url: dataUrl,\r\n      shopName: data.data.shopName,\r\n      orderId: data.data.orderId\r\n    }\r\n  }\r\n\r\n  async getPayStatus (payId) {\r\n    const data = await repository.getPayStatus(payId)\r\n    if (!data.success) {\r\n      throw new Error('获取支付状态失败:' + data.msg)\r\n    }\r\n    return data.data\r\n  }\r\n\r\n  getPayStatusStr (status) {\r\n    if (status === 0) {\r\n      return '未支付'\r\n    }\r\n    if (status === 1) {\r\n      return '已支付'\r\n    }\r\n    if (status === 2) {\r\n      return '已取消'\r\n    }\r\n  }\r\n}\r\nexport default new PayService()\r\n"]}]}